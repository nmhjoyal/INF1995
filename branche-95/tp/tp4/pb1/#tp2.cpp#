/*
 * Nom: compteur 32 bits
 * Copyright (C) 2005 Matthew Khouzam
 * License http://www.gnu.org/copyleft/gpl.html GNU/GPL
 * Description: Ceci est un exemple simple de programme 
 * Version: 1.1
 */

#define F_CPU 8000000

#include <avr/io.h> 
#include <util/delay.h>

const int ROUGE = 1;
const int VERT = 2;

const int IN = 0x00;
const int OUT = 0xff;
int main()
{
  DDRA = OUT; 
  DDRD = IN;
  
for(;;){
    if ( PIND & (1 << 2) ){
        _delay_ms(10);
        while(PIND & (1 << 2)){
            PORTA = ROUGE;
            PORTA = VERT;
        }
        
    } else {
        PORTA = 0;
    }
}
  
  

      
   
  /*double marde = 2000;

  for(;;)  // boucle sans fin
  {
      
    PORTB = 0b10101010;
    _delay_ms (marde);
    PORTB = 0b01010101;
    _delay_ms (marde);
    

    
    double frottiFrotti = 0; 
    PORTB = 0b00000000;
    
    while(frottiFrotti != marde*50){
        
        PORTB = 0b10101010;
        _delay_ms(0.001);
        PORTB = 0b01010101;
        _delay_ms(0.001);
        
    
        frottiFrotti += 1; 

        
        
    }*/
    
    

      
      
    /*compteur++;  // incremente le compteur
                 // si le compteur est 0xffff ffff il revient a 0
    PORTD = compteur;       // PORTD = 8 bits de large,
                            // il prend les bits de 0 a 7 du compteur
    PORTC = compteur >> 8;  // PORTC = 8 bits de large,
                            // il prend les bits de 8 a 15 du compteur
                            // en faisant un decallage de 8 bits.
    PORTB = compteur >> 16; // PORTB = 8 bits de large,
                            // il prend les bits de 16 a 23 du compteur
                            // en faisant un decallage de 16 bits.
    PORTA = compteur >> 24;// PORTA = 8 bits de large,
                            // il prend les bits de 24 a 31 du compteur
                            // en faisant un decallage de 24 bits.*/
    
    //0 = fuck you, 1 = rouge 2 = vert, 3 = fuck you
    
  //}  
return 0; 
}

